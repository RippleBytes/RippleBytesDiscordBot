# Generated by Django 5.1.3 on 2025-01-07 08:08

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('discord_user_id', models.CharField(default=11, unique=True)),
                ('job_title', models.CharField(default='employee', max_length=200)),
                ('phone_number', models.CharField(default=0, max_length=10, unique=True)),
                ('date_of_birth', models.CharField(default='2025/10/10')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], default='00')),
                ('private_email', models.EmailField(default='abc@gmail.com', max_length=254, unique=True)),
                ('employee_citizenship_number', models.CharField(default=0, max_length=14)),
                ('employee_citizenship_photo', models.ImageField(blank=True, default='superuser.jpg', null=True, upload_to='EmployeeCitizenship/')),
                ('employee_resume_pdf', models.FileField(blank=True, default='superuser.pdf', null=True, upload_to='EmployeeResume/')),
                ('employee_pp_photo', models.ImageField(blank=True, default='superuser.jpg', null=True, upload_to='EmployeePhoto/')),
                ('groups', models.ManyToManyField(blank=True, related_name='bot_user_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='bot_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BankDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(default='00', max_length=100)),
                ('bank_branch_location', models.CharField(default='Kathmandu', max_length=50)),
                ('employee_bank_account_name', models.CharField(default=0, max_length=100)),
                ('employee_bank_account_number', models.CharField(default=0, max_length=50)),
                ('employee_pan_number', models.PositiveBigIntegerField(default=0)),
                ('employee_pan_photo', models.ImageField(blank=True, default=None, null=True, upload_to='EmployeePanCard/')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CheckinRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100)),
                ('checkin_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('checkout_time', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BreakRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('reason', models.TextField()),
                ('checkin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='breaks', to='bot.checkinrecord')),
            ],
        ),
        migrations.CreateModel(
            name='LateArrival',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=100)),
                ('time_duration', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LeaveRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100)),
                ('leave_type', models.CharField(choices=[('Unpaid Leave', 'Unpaid Leave'), ('Annual Leave', 'Annual Leave'), ('Sick Leave', 'Sick Leave'), ('Unknown', 'Unknown')], default='Annual Leave')),
                ('status', models.CharField(blank=True, choices=[('Requested', 'Requested'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Requested', null=True)),
                ('reason', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TaskRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task', models.TextField()),
                ('completed', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
